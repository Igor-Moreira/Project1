/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MAIN;

import java.awt.Color;
import java.awt.List;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Igor Moreira
 */
public class Interface extends javax.swing.JFrame {

    private ResultSet returnquery = null; // lista que armazenara o retorno do select
    private String url = "jdbc:postgresql://localhost:5432/";
    private String username = "postgres";
    private String password = "computacao";
    private String command = "";
    private Connection Con;
    private Statement stm;
    private int saldo = 0;
    private int quantidade = 0;
    private int match1;
    private int match2;

    public void carregaCombo(JComboBox jcTipo) {
        try {
            command = "SELECT * from dados ORDER BY id";
            stm = Con.createStatement();
            returnquery = stm.executeQuery(command);

            while (returnquery.next()) {
                // JOptionPane.showMessageDialog(rootPane, returnquery.getString("item").toUpperCase());
                jcTipo.addItem(returnquery.getString("item").toUpperCase());
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void checarItem() {
        try {
            String temp1 = adc_item.getText().toUpperCase();
            command = "SELECT * from dados WHERE item LIKE '%" + temp1 + "%'";
            stm = Con.createStatement();
            returnquery = stm.executeQuery(command);

            while (returnquery.next()) {

                if (returnquery.getString("item").equals(temp1)) {
                    match2 = 1;
                } else {
                    match2 = 0;
                }

            }
            if (match2 == 0) {
                command = "INSERT INTO dados (item) VALUES ('" + temp1 + "')";
                stm = Con.createStatement();
                stm.executeUpdate(command);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void AtualizaSaldo() {
        try {
            command = "SELECT * from caixa ORDER BY id";
            stm = Con.createStatement();
            returnquery = stm.executeQuery(command);

            while (returnquery.next()) {
                // JOptionPane.showMessageDialog(rootPane, returnquery.getString("item").toUpperCase());
                SALDO.setText("R$ " + returnquery.getString("saldo").replace('.', ','));
                saldo = (int) Double.parseDouble(returnquery.getString("saldo").replace(',', '.'));
                SALDO.setHorizontalAlignment(SwingConstants.CENTER);

            }

            if (saldo > 0) {
                SALDO.setForeground(Color.blue);
            } else if (saldo < 0) {
                SALDO.setForeground(Color.red);
            } else if (saldo == 0) {
                SALDO.setForeground(Color.GRAY);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public Interface() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Buscar = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        busca = new javax.swing.JComboBox<>();
        b_pesquisar = new javax.swing.JButton();
        Estoque = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        adc_item = new javax.swing.JTextField();
        adc_quant = new javax.swing.JTextField();
        adc_armazem = new javax.swing.JTextField();
        est_adc = new javax.swing.JButton();
        rem_arm = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        rem_quant = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        est_rem = new javax.swing.JButton();
        rem_item = new javax.swing.JComboBox<>();
        adc_data = new javax.swing.JFormattedTextField();
        Caixa = new javax.swing.JFrame();
        jLabel11 = new javax.swing.JLabel();
        SALDO = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cx_valor = new javax.swing.JTextField();
        b_saque = new javax.swing.JButton();
        b_adcvalor = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        est_sel = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        item_valor = new javax.swing.JTextField();
        b_venderitem = new javax.swing.JButton();
        b_compraritem = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        item_quant = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        item_arm = new javax.swing.JTextField();
        b_buscar = new javax.swing.JButton();
        b_gestoque = new javax.swing.JButton();
        b_gcaixa = new javax.swing.JButton();
        b_sair = new javax.swing.JButton();

        Buscar.setMinimumSize(new java.awt.Dimension(750, 494));
        Buscar.setSize(new java.awt.Dimension(750, 494));
        Buscar.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                BuscarWindowOpened(evt);
            }
        });

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantidade", "Armazem", "Data do Armazenamento"
            }
        ));
        jScrollPane1.setViewportView(tabela);

        jLabel5.setFont(new java.awt.Font("MS Reference Sans Serif", 3, 14)); // NOI18N
        jLabel5.setText("Pesquisar no estoque:");

        busca.setFont(new java.awt.Font("MS Reference Sans Serif", 3, 14)); // NOI18N
        busca.setToolTipText("");
        busca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaActionPerformed(evt);
            }
        });

        b_pesquisar.setText("Pesquisar");
        b_pesquisar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_pesquisarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout BuscarLayout = new javax.swing.GroupLayout(Buscar.getContentPane());
        Buscar.getContentPane().setLayout(BuscarLayout);
        BuscarLayout.setHorizontalGroup(
            BuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscarLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(jLabel5)
                .addGap(27, 27, 27)
                .addComponent(busca, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(b_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(97, Short.MAX_VALUE))
            .addGroup(BuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(BuscarLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 730, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        BuscarLayout.setVerticalGroup(
            BuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BuscarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(BuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(busca, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(443, Short.MAX_VALUE))
            .addGroup(BuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(BuscarLayout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        Estoque.setMinimumSize(new java.awt.Dimension(750, 494));
        Estoque.setPreferredSize(new java.awt.Dimension(750, 494));
        Estoque.setSize(new java.awt.Dimension(750, 494));
        Estoque.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                EstoqueWindowOpened(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("MS Reference Sans Serif", 3, 14)); // NOI18N
        jLabel6.setText("Adicionar ao estoque:");

        jLabel7.setFont(new java.awt.Font("MS Reference Sans Serif", 3, 14)); // NOI18N
        jLabel7.setText("Remover do estoque:");

        jLabel1.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel1.setText("ITEM");

        jLabel2.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel2.setText("QUANTIDADE");

        jLabel3.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel3.setText("ARMAZEM");

        jLabel4.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel4.setText("DATA");

        est_adc.setText("Adicionar");
        est_adc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                est_adcMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel8.setText("ITEM");

        jLabel9.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel9.setText("QUANTIDADE");

        jLabel10.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel10.setText("ARMAZEM");

        est_rem.setText("Remover");
        est_rem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                est_remMouseClicked(evt);
            }
        });

        rem_item.setFont(new java.awt.Font("MS Reference Sans Serif", 3, 14)); // NOI18N
        rem_item.setToolTipText("");
        rem_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rem_itemActionPerformed(evt);
            }
        });

        try {
            adc_data.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout EstoqueLayout = new javax.swing.GroupLayout(Estoque.getContentPane());
        Estoque.getContentPane().setLayout(EstoqueLayout);
        EstoqueLayout.setHorizontalGroup(
            EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstoqueLayout.createSequentialGroup()
                .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EstoqueLayout.createSequentialGroup()
                        .addGap(282, 282, 282)
                        .addComponent(jLabel6))
                    .addGroup(EstoqueLayout.createSequentialGroup()
                        .addGap(300, 300, 300)
                        .addComponent(est_adc, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EstoqueLayout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel7))
                    .addGroup(EstoqueLayout.createSequentialGroup()
                        .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EstoqueLayout.createSequentialGroup()
                                .addGap(155, 155, 155)
                                .addComponent(jLabel8))
                            .addGroup(EstoqueLayout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(rem_item, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(59, 59, 59)
                        .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(rem_quant, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EstoqueLayout.createSequentialGroup()
                                .addGap(65, 65, 65)
                                .addComponent(rem_arm, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(EstoqueLayout.createSequentialGroup()
                                .addGap(125, 125, 125)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(EstoqueLayout.createSequentialGroup()
                        .addGap(305, 305, 305)
                        .addComponent(est_rem, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(99, Short.MAX_VALUE))
            .addGroup(EstoqueLayout.createSequentialGroup()
                .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EstoqueLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel1))
                    .addGroup(EstoqueLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(adc_item, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(adc_quant, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EstoqueLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EstoqueLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(adc_armazem, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(adc_data, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))))
        );
        EstoqueLayout.setVerticalGroup(
            EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EstoqueLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adc_item, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adc_quant, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adc_armazem, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adc_data, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(est_adc, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(EstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rem_arm, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rem_quant, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rem_item, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(est_rem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Caixa.setMinimumSize(new java.awt.Dimension(750, 494));
        Caixa.setSize(new java.awt.Dimension(750, 494));
        Caixa.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                CaixaWindowOpened(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel11.setText("SALDO  DO CAIXA:");

        SALDO.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        SALDO.setText("                           ");

        jLabel13.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel13.setText("VALOR :");

        b_saque.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        b_saque.setText("EFETUAR SAQUE");
        b_saque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_saqueMouseClicked(evt);
            }
        });

        b_adcvalor.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        b_adcvalor.setText("ADICIONAR VALOR");
        b_adcvalor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_adcvalorMouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel14.setText("ITEM DO ESTOQUE :");

        est_sel.setFont(new java.awt.Font("MS Reference Sans Serif", 3, 14)); // NOI18N
        est_sel.setToolTipText("");
        est_sel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                est_selActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel15.setText("VALOR :");

        b_venderitem.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        b_venderitem.setText("VENDER ITEM");
        b_venderitem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_venderitemMouseClicked(evt);
            }
        });

        b_compraritem.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        b_compraritem.setText("COMPRAR ITEM");
        b_compraritem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_compraritemMouseClicked(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel12.setText("QUANTIDADE");

        jLabel16.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel16.setText("ARMAZEM");

        javax.swing.GroupLayout CaixaLayout = new javax.swing.GroupLayout(Caixa.getContentPane());
        Caixa.getContentPane().setLayout(CaixaLayout);
        CaixaLayout.setHorizontalGroup(
            CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CaixaLayout.createSequentialGroup()
                .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CaixaLayout.createSequentialGroup()
                        .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CaixaLayout.createSequentialGroup()
                                .addGap(239, 239, 239)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SALDO))
                            .addGroup(CaixaLayout.createSequentialGroup()
                                .addGap(202, 202, 202)
                                .addComponent(b_venderitem, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41)
                                .addComponent(b_compraritem)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(CaixaLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel13)
                        .addGap(29, 29, 29)
                        .addComponent(cx_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(b_saque, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(b_adcvalor)))
                .addContainerGap(128, Short.MAX_VALUE))
            .addGroup(CaixaLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CaixaLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(item_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CaixaLayout.createSequentialGroup()
                        .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CaixaLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel14))
                            .addComponent(est_sel, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(104, 104, 104)
                        .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(item_quant, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))))
                .addGap(64, 64, 64)
                .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(item_arm, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CaixaLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CaixaLayout.setVerticalGroup(
            CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CaixaLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SALDO, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cx_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_saque, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_adcvalor, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CaixaLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, CaixaLayout.createSequentialGroup()
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(est_sel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CaixaLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42))
                            .addComponent(item_quant, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(CaixaLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(item_arm, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(item_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(CaixaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_venderitem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_compraritem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        b_buscar.setText("Buscar no estoque");
        b_buscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_buscarMouseClicked(evt);
            }
        });

        b_gestoque.setText("Gerenciar estoque");
        b_gestoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_gestoqueMouseClicked(evt);
            }
        });

        b_gcaixa.setText("Gerenciar Caixa");
        b_gcaixa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_gcaixaMouseClicked(evt);
            }
        });

        b_sair.setText("Finalizar");
        b_sair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_sairMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_sair, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_gcaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_gestoque, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(124, 124, 124))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addComponent(b_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(b_gestoque, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(b_gcaixa, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(b_sair, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_pesquisarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_pesquisarMouseClicked
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }
        try {
            //instanciar a tabela

            String item = String.valueOf(busca.getSelectedItem());

            command = "SELECT * from estoque WHERE item = '" + item + "'";
            stm = Con.createStatement();
            returnquery = stm.executeQuery(command);

            while (returnquery.next()) {

                model.addRow(new Object[]{returnquery.getString("item"), returnquery.getString("quantidade"), returnquery.getString("armazem"), returnquery.getString("data")});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_b_pesquisarMouseClicked

    private void buscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscaActionPerformed

    private void rem_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rem_itemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rem_itemActionPerformed

    private void est_selActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_est_selActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_est_selActionPerformed

    private void b_buscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_buscarMouseClicked
        Buscar.setLocationRelativeTo(null);
        Buscar.setVisible(true);
    }//GEN-LAST:event_b_buscarMouseClicked

    private void b_gestoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_gestoqueMouseClicked
        Estoque.setLocationRelativeTo(null);
        Estoque.setVisible(true);
    }//GEN-LAST:event_b_gestoqueMouseClicked

    private void b_gcaixaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_gcaixaMouseClicked
        Caixa.setLocationRelativeTo(null);
        Caixa.setVisible(true);
    }//GEN-LAST:event_b_gcaixaMouseClicked

    private void b_sairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_sairMouseClicked
        int reply = JOptionPane.showConfirmDialog(null, "Deseja fechar o programa?", "Sair?", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.YES_OPTION) {

            System.exit(0);
        }
    }//GEN-LAST:event_b_sairMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        setLocationRelativeTo(null);

        try {
            Class.forName("org.postgresql.Driver");
            Con = DriverManager.getConnection(url, username, password);
            JOptionPane.showMessageDialog(rootPane, "Conexao Estabelecida com Sucesso");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            Con.close();
        } catch (SQLException ex) {
            Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        JOptionPane.showMessageDialog(rootPane, "Conexão com DB encerrada");
    }//GEN-LAST:event_formWindowClosing

    private void BuscarWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_BuscarWindowOpened
        carregaCombo(busca);
    }//GEN-LAST:event_BuscarWindowOpened

    private void EstoqueWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_EstoqueWindowOpened
        carregaCombo(rem_item);
    }//GEN-LAST:event_EstoqueWindowOpened

    private void est_adcMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_est_adcMouseClicked
        if (adc_item.getText().equals("") || adc_quant.getText().equals("") || adc_armazem.getText().equals("") || adc_data.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Um ou mais campos nescessarios em branco");
        } else {
            checarItem();

            try {
                
                
                String temp1 = adc_item.getText().toUpperCase();
                String temp2 = adc_armazem.getText().toUpperCase();

                command = "SELECT * from estoque  WHERE item LIKE '%" + temp1 + "%'  AND armazem LIKE '%" + temp2 + "%'";
                stm = Con.createStatement();
                returnquery = stm.executeQuery(command);

                while (returnquery.next()) {

                    if (returnquery.getString("quantidade") == null) {
                        match1 = 0;

                    } else {
                        quantidade = Integer.parseInt(returnquery.getString("quantidade"));
                        match1 = 1;
                    }

                }

                if (match1 == 0) {

                    command = "INSERT INTO estoque (item, quantidade, armazem, data) "
                            + "VALUES ('" + temp1 + "' , '" + adc_quant.getText() + "', '" + temp2 + "', " + "'" + adc_data.getText() + "')";

                    stm = Con.createStatement();
                    stm.executeUpdate(command);
                    adc_item.setText("");
                    adc_quant.setText("");
                    adc_armazem.setText("");
                    adc_data.setText("");
                    JOptionPane.showMessageDialog(rootPane, "Item adicionado ao estoque!!!");
                } else if (match1 == 1) {
                    quantidade = quantidade + Integer.parseInt(adc_quant.getText());

                    command = "UPDATE estoque SET quantidade = '" + quantidade + "' WHERE item LIKE '%" + temp1 + "%'  AND armazem LIKE '%" + temp2 + "%'";

                    stm = Con.createStatement();
                    stm.executeUpdate(command);
                    adc_item.setText("");
                    adc_quant.setText("");
                    adc_armazem.setText("");
                    adc_data.setText("");
                    JOptionPane.showMessageDialog(rootPane, "Item adicionado ao estoque!!!");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }
        }
    }//GEN-LAST:event_est_adcMouseClicked

    private void est_remMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_est_remMouseClicked
        if (rem_quant.getText().equals("") || rem_arm.getText().equals("") || busca.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Um ou mais campos nescessarios em branco");
        } else {
            int quantidade = 0;
            try {
                String item = String.valueOf(rem_item.getSelectedItem());

                command = "SELECT * from estoque  WHERE item ='" + item + "' AND armazem LIKE '%" + rem_arm.getText() + "%' ";
                stm = Con.createStatement();
                returnquery = stm.executeQuery(command);

                while (returnquery.next()) {

                    quantidade = Integer.parseInt(returnquery.getString("quantidade"));

                }

                if (quantidade > Integer.parseInt(rem_quant.getText())) {

                    quantidade = quantidade - Integer.parseInt(rem_quant.getText());
                    command = "UPDATE estoque SET quantidade ='" + quantidade + "' WHERE item ='" + item + "' AND armazem LIKE '%" + rem_arm.getText() + "%' ";
                    stm = Con.createStatement();
                    stm.executeUpdate(command);
                    JOptionPane.showMessageDialog(rootPane, "Estoque Atualizado");
                    rem_quant.setText("");
                    rem_arm.setText("");

                } else {
                    JOptionPane.showMessageDialog(rootPane, "Quantidade a ser removida maior que quantidade disponivel em estoque");
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }
        }
    }//GEN-LAST:event_est_remMouseClicked

    private void CaixaWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_CaixaWindowOpened
        AtualizaSaldo();
        carregaCombo(est_sel);
    }//GEN-LAST:event_CaixaWindowOpened

    private void b_saqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_saqueMouseClicked
        if (cx_valor.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor digitar um Valor");
        } else {

            int valort1 = (int) Double.parseDouble(cx_valor.getText());

            try {
                saldo = saldo - valort1;
                command = "UPDATE caixa SET saldo='" + saldo + "' WHERE id = '1'";
                stm = Con.createStatement();
                stm.executeUpdate(command);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }

        }

        AtualizaSaldo();
    }//GEN-LAST:event_b_saqueMouseClicked

    private void b_adcvalorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_adcvalorMouseClicked
        if (cx_valor.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Favor digitar um Valor");
        } else {

            int valort1 = (int) Double.parseDouble(cx_valor.getText());

            try {
                saldo = saldo + valort1;
                command = command = "UPDATE caixa SET saldo='" + saldo + "' WHERE id = '1'";
                stm = Con.createStatement();
                stm.executeUpdate(command);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }

        }
        AtualizaSaldo();
    }//GEN-LAST:event_b_adcvalorMouseClicked

    private void b_venderitemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_venderitemMouseClicked
        if (item_arm.getText().equals("") || item_valor.getText().equals("") || item_quant.getText().equals("") || est_sel.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Um ou mais campos nescessarios em branco");
        } else {

            int valort1 = (int) Double.parseDouble(item_quant.getText()) * (int) Double.parseDouble(item_valor.getText());

            try {

                String item = String.valueOf(est_sel.getSelectedItem());

                command = "SELECT * from estoque  WHERE item ='" + item + "'  AND armazem LIKE '%" + rem_arm.getText() + "%'";
                stm = Con.createStatement();
                returnquery = stm.executeQuery(command);

                while (returnquery.next()) {

                    quantidade = Integer.parseInt(returnquery.getString("quantidade"));

                }

                if (quantidade > Integer.parseInt(item_quant.getText())) {

                    quantidade = quantidade - Integer.parseInt(item_quant.getText());

                    command = "UPDATE estoque SET quantidade ='" + quantidade + "' WHERE item ='" + item + "'  AND armazem LIKE '%" + rem_arm.getText() + "%'";

                    stm = Con.createStatement();
                    stm.executeUpdate(command);
                    JOptionPane.showMessageDialog(rootPane, "Item vendido");
                    item_arm.setText("");
                    item_quant.setText("");
                    item_valor.setText("");

                } else if (quantidade < Integer.parseInt(item_quant.getText())) {

                    JOptionPane.showMessageDialog(rootPane, "Quantidade a ser vendida maior que quantidade disponivel em estoque");
                }

                saldo = saldo + valort1;
                command = command = "UPDATE caixa SET saldo='" + saldo + "' WHERE id = '1'";
                stm = Con.createStatement();
                stm.executeUpdate(command);

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }

        }

        AtualizaSaldo();
    }//GEN-LAST:event_b_venderitemMouseClicked

    private void b_compraritemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_compraritemMouseClicked
        if (item_arm.getText().equals("") || item_valor.getText().equals("") || item_quant.getText().equals("") || est_sel.getSelectedItem().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Um ou mais campos nescessarios em branco");
        } else {

            int valort1 = (int) Double.parseDouble(item_quant.getText()) * (int) Double.parseDouble(item_valor.getText());

            try {

                String item = String.valueOf(est_sel.getSelectedItem());
                command = "SELECT * from estoque  WHERE item ='" + item + "'  AND armazem LIKE '%" + rem_arm.getText() + "%'";
                stm = Con.createStatement();
                returnquery = stm.executeQuery(command);

                while (returnquery.next()) {

                    quantidade = Integer.parseInt(returnquery.getString("quantidade"));

                }

                quantidade = quantidade + Integer.parseInt(item_quant.getText());
                command = "UPDATE estoque SET quantidade ='" + quantidade + "' WHERE item ='" + item + "'  AND armazem LIKE '%" + rem_arm.getText() + "%'";

                stm = Con.createStatement();
                stm.executeUpdate(command);
                item_arm.setText("");
                item_quant.setText("");
                item_valor.setText("");

                saldo = saldo - valort1;
                command = command = "UPDATE caixa SET saldo='" + saldo + "' WHERE id = '1'";
                stm = Con.createStatement();
                stm.executeUpdate(command);
                JOptionPane.showMessageDialog(rootPane, "Item comprado");

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }

        }

        AtualizaSaldo();
    }//GEN-LAST:event_b_compraritemMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame Buscar;
    private javax.swing.JFrame Caixa;
    private javax.swing.JFrame Estoque;
    private javax.swing.JLabel SALDO;
    private javax.swing.JTextField adc_armazem;
    private javax.swing.JFormattedTextField adc_data;
    private javax.swing.JTextField adc_item;
    private javax.swing.JTextField adc_quant;
    private javax.swing.JButton b_adcvalor;
    private javax.swing.JButton b_buscar;
    private javax.swing.JButton b_compraritem;
    private javax.swing.JButton b_gcaixa;
    private javax.swing.JButton b_gestoque;
    private javax.swing.JButton b_pesquisar;
    private javax.swing.JButton b_sair;
    private javax.swing.JButton b_saque;
    private javax.swing.JButton b_venderitem;
    private javax.swing.JComboBox<String> busca;
    private javax.swing.JTextField cx_valor;
    private javax.swing.JButton est_adc;
    private javax.swing.JButton est_rem;
    private javax.swing.JComboBox<String> est_sel;
    private javax.swing.JTextField item_arm;
    private javax.swing.JTextField item_quant;
    private javax.swing.JTextField item_valor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField rem_arm;
    private javax.swing.JComboBox<String> rem_item;
    private javax.swing.JTextField rem_quant;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
